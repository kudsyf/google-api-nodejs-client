0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.14
3 info using node@v0.10.29
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /home/vagrant/.npm/3a52ce78-.lock
11 verbose tar pack [ '/home/vagrant/.npm/googleapis-plus/0.8.0/package.tgz', '.' ]
12 verbose tarball /home/vagrant/.npm/googleapis-plus/0.8.0/package.tgz
13 verbose folder .
14 info prepublish googleapis-plus@0.8.0
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /home/vagrant/.npm/1f1177db-tar.lock
17 silly lockFile 80073f92-oogleapis-plus-0-8-0-package-tgz tar:///home/vagrant/.npm/googleapis-plus/0.8.0/package.tgz
18 verbose lock tar:///home/vagrant/.npm/googleapis-plus/0.8.0/package.tgz /home/vagrant/.npm/80073f92-oogleapis-plus-0-8-0-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 80073f92-oogleapis-plus-0-8-0-package-tgz tar:///home/vagrant/.npm/googleapis-plus/0.8.0/package.tgz
22 silly lockFile 80073f92-oogleapis-plus-0-8-0-package-tgz tar:///home/vagrant/.npm/googleapis-plus/0.8.0/package.tgz
23 silly lockFile 5590a2f4-pm-googleapis-plus-0-8-0-package /home/vagrant/.npm/googleapis-plus/0.8.0/package
24 verbose lock /home/vagrant/.npm/googleapis-plus/0.8.0/package /home/vagrant/.npm/5590a2f4-pm-googleapis-plus-0-8-0-package.lock
25 silly lockFile 5590a2f4-pm-googleapis-plus-0-8-0-package /home/vagrant/.npm/googleapis-plus/0.8.0/package
26 silly lockFile 5590a2f4-pm-googleapis-plus-0-8-0-package /home/vagrant/.npm/googleapis-plus/0.8.0/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'googleapis-plus',
29 silly publish   version: '0.8.0',
29 silly publish   author: { name: 'Linda Nichols', email: 'lynnaloo@gmail.com' },
29 silly publish   description: 'Google APIs Client Library for Node.js',
29 silly publish   contributors:
29 silly publish    [ { name: 'Burcu Dogan', email: 'jbd@google.com' },
29 silly publish      { name: 'Monsur Hossain', email: 'monsur@google.com' },
29 silly publish      { name: 'Linda Nichols', email: 'lynnaloo@gmail.com' } ],
29 silly publish   main: './lib/googleapis',
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'https://github.com/lynnaloo/google-api-nodejs-client.git' },
29 silly publish   keywords: [ 'google', 'api', 'google apis', 'client', 'client library' ],
29 silly publish   dependencies:
29 silly publish    { request: '~2.34.0',
29 silly publish      async: '~0.2.10',
29 silly publish      'gapitoken-generic': '~0.0.3' },
29 silly publish   devDependencies: { mocha: '1.8.1', url: '0.7.9' },
29 silly publish   scripts: { test: 'mocha --reporter spec --timeout 4000' },
29 silly publish   license: 'Apache 2',
29 silly publish   readme: '# google-api-nodejs-client [alpha]\n\n[![Build Status](https://travis-ci.org/google/google-api-nodejs-client.png)](https://travis-ci.org/google/google-api-nodejs-client)\n\n`google-api-nodejs-client` is Google\'s officially supported\n[node.js](http://nodejs.org/) client\nlibrary for accessing Google APIs, it also supports authorization and\nauthentication with OAuth 2.0.\n\n### Questions/problems?\n\n* Ask your development related questions on [![Ask a question on Stackoverflow](https://googledrive.com/host/0ByfSjdPVs9MZbkhjeUhMYzRTeEE/stackoveflow-tag.png)](http://stackoverflow.com/questions/tagged/google-api-nodejs-client)\n* If you found a bug, please [file a bug](https://github.com/google/google-api-nodejs-client/issues).\n\n**Note**: This library is currently in *alpha* status, meaning that we can make\nchanges in the future that *may not be compatible* with the previous versions.\n\n## Installation\n\nThe library is distributed on `npm`. In order to add it as a dependency,\nrun the following command:\n\n~~~~ sh\n$ npm install googleapis\n~~~~\n\n## Guide\n\n### Discover APIs\n\nDynamically load Google APIs and start making requests:\n\n~~~~ js\nvar googleapis = require(\'googleapis\');\n\ngoogleapis\n    .discover(\'urlshortener\', \'v1\')\n    .discover(\'plus\', \'v1\')\n    .execute(function(err, client) {\n  if (err) {\n    console.log(\'Problem during the client discovery.\', err);\n    return;\n  }\n  var params = { shortUrl: \'http://goo.gl/DdUKX\' };\n  var getUrlReq = client.urlshortener.url.get(params);\n\n  getUrlReq.execute(function (err, response) {\n    console.log(\'Long url is\', response.longUrl);\n  });\n\n  var getUserReq = client.plus.people.get({ userId: \'+burcudogan\' });\n\n  getUserReq.execute(function(err, user) {\n    console.log(\'User id is: \' + user.id);\n  });\n});\n~~~~\n\nSupported APIs are listed on\n[Google APIs Explorer](https://developers.google.com/apis-explorer).\n\n#### Discovery Document Caching\n\nDiscovery documents are being cached for 5 minutes locally.\nYou can configure the directory used to store cached discovery\nfiles by using the `cache.path` option.\n\n~~~~ js\ngoogleapis\n    .discover(\'plus\', \'v3\')\n    .withOpts({ cache: { path: \'<path>\' }))\n    .execute();\n~~~~\n\n### Authorization and Authentication\n\nThis client comes with an OAuth2 client that allows you to retrieve an access token and\nrefreshes the token and re-try the request seamlessly if token is expired. The\nbasics of Google\'s OAuth 2.0 implementation is explained on\n[Google Authorization and Authentication\ndocumentation](https://developers.google.com/accounts/docs/OAuth2Login).\n\nA complete sample application that authorizes and authenticates with OAuth2.0\nclient is available at `examples/oauth2.js`.\n\n#### Consent Page Url\n\nIn order to ask for permissions from a user to retrieve an access token, you\nshould redirect them to a consent page. In order to create a consent page\nURL:\n\n~~~~ js\nvar googleapis = require(\'googleapis\'),\n    OAuth2 = googleapis.auth.OAuth2;\n\nvar oauth2Client =\n    new OAuth2(CLIENT_ID, CLIENT_SECRET, REDIRECT_URL);\n\n// generates a url that allows offline access and asks permissions\n// for Google+ scope.\nvar scopes = [\n  \'https://www.googleapis.com/auth/plus.me\',\n  \'https://www.googleapis.com/auth/calendar\'\n];\n\nvar url = oauth2Client.generateAuthUrl({\n  access_type: \'offline\',\n  scope: scopes.join(" ") // space delimited string of scopes\n});\n~~~~\n\n#### Retrieving Tokens\nOnce a user has given permissions on the consent page, Google will redirect\nthe page to the redirect url you have provided with a code query parameter.\n\n    GET /oauthcallback?code={authorizationCode}\n\nWith the code returned, you can ask for an access token as shown below:\n\n~~~~ js\noauth2Client.getToken(code, function(err, tokens) {\n  // contains an access_token and optionally a refresh_token.\n  // save them permanently.\n});\n~~~~\n\n### API Client\n\nClient libraries are generated during runtime by metadata provided by Google\nAPIs Discovery Service. Metadata provided by Discovery Service is cached,\nand won\'t be requested each time you load a client. Below, there is an\nexample of loading a client for\n[URL Shortener API](https://developers.google.com/url-shortener/).\n\n~~~~ js\ngoogleapis\n    .discover(\'urlshortener\', \'v1\')\n    .execute(function(err, client) {\n  // handle discovery errors\n  // make requests\n});\n~~~~\n\n### Requests\n\nThe following sample loads a client for URL Shortener and retrieves the long url\nof the given short url:\n\n~~~~ js\ngoogleapis\n    .discover(\'urlshortener\', \'v1\')\n    .execute(function(err, client) {\n  // handle discovery errors\n  client.urlshortener.url.get({ shortUrl: \'http://goo.gl/DdUKX\' })\n      .execute(function(err, result) {\n    // result.longUrl contains the long url.\n  });\n});\n~~~~\n\nAlternatively, you may need to send an API key with the\nrequest you are going to make. The following creates and executes a request from the Google+ API service to retrieve a person profile given a userId:\n\n~~~~ js\ngoogleapis\n    .discover(\'plus\', \'v1\')\n    .execute(function(err, client) {\n  // handle discovery errors\n  var getUserAuthdReq = client.plus.people.get({ userId: \'+burcudogan\' })\n      .withApiKey(API_KEY);\n\n  getUserAuthdReq.execute(function(err, user) {\n    console.log("Result: " + (err ? err.message : user.displayName));\n  });\n});\n~~~~\n\nTo learn more about API keys, please see the [documentation](https://developers.google.com/console/help/#UsingKeys).\n\n#### Making Authenticated Requests\n\nAnd you can start using oauth2Client to authorize and authenticate your\nrequests to Google APIs with the retrieved tokens. If you provide a\nrefresh_token, the access_token is automatically refreshed and the request is replayed in\ncase the access_token has expired.\n\nFollowing sample retrieves Google+ profile of the authenticated user.\n\n~~~~ js\nvar oauth2Client =\n    new OAuth2(CLIENT_ID, CLIENT_SECRET, REDIRECT_URL);\n\n// Retrieve tokens via token exchange explaind above.\n// Or you can set them.\noauth2Client.credentials = {\n  access_token: \'ACCESS TOKEN HERE\',\n  refresh_token: \'REFRESH TOKEN HERE\'\n};\n\nclient\n    .plus.people.get({ userId: \'me\' })\n    .withAuthClient(oauth2Client)\n    .execute(callback);\n~~~~\n\n### Batch requests (experimental)\n\nYou can combine multiple requests in a single one by using batch requests.\n\n~~~~ js\nvar getUserReq =\n    client.plus.people.get({ userId: \'+BurcuDogan\' });\n\nvar insertUrlReq =\n    client.urlshortener.url.insert({ longUrl: \'http://google.com\' });\n\nclient\n    .newBatchRequest()\n    .add(getUserReq)\n    .add(insertUrlReq)\n    .execute(function(err, results) {\n  // handle results\n});\n~~~~\n\n### Media Uploads\n\nClient supports basic and multipart media uploads. For creation and modification requests\nwith media attachments, take a look at the `examples/mediaupload.js` sample.\n\n~~~~ js\nclient\n    .drive.files.insert({ title: \'Test\', mimeType: \'text/plain\' })\n    .withMedia(\'text/plain\', \'Hello World\')\n    .execute();\n~~~~\n\n## License\n\n`google-api-nodejs-client` is licensed with Apache 2.0. Full license text is\navailable on COPYING file.\n\n## Contributing\n\nSee [CONTRIBUTING](https://github.com/google/google-api-nodejs-client/tree/master/CONTRIBUTING.md).\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: 'd5937433819229f06fdc40983d40cd0990e7037f',
29 silly publish   bugs: { url: 'https://github.com/lynnaloo/google-api-nodejs-client/issues' },
29 silly publish   homepage: 'https://github.com/lynnaloo/google-api-nodejs-client',
29 silly publish   _id: 'googleapis-plus@0.8.0',
29 silly publish   _shasum: 'd29ec3015d605113492549c208835bfeb2274700',
29 silly publish   _from: '.' }
30 verbose url raw googleapis-plus
31 verbose url resolving [ 'https://registry.npmjs.org/', './googleapis-plus' ]
32 verbose url resolved https://registry.npmjs.org/googleapis-plus
33 info trying registry request attempt 1 at 03:44:11
34 http PUT https://registry.npmjs.org/googleapis-plus
35 http 403 https://registry.npmjs.org/googleapis-plus
36 verbose headers { date: 'Wed, 09 Jul 2014 03:44:12 GMT',
36 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
36 verbose headers   'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=30',
36 verbose headers   'content-length': '11720',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   'x-served-by': 'cache-at51-ATL',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1404877451.791448,VS0,VE408',
36 verbose headers   'keep-alive': 'timeout=10, max=50',
36 verbose headers   connection: 'Keep-Alive' }
37 error publish Failed PUT 403
38 error Error: forbidden cannot modify pre-existing version: 0.8.0
38 error old={"name":"googleapis-plus","version":"0.8.0","author":{"name":"Linda Nichols","email":"lynnaloo@gmail.com"},"description":"Google APIs Client Library for Node.js","contributors":[{"name":"Burcu Dogan","email":"jbd@google.com"},{"name":"Monsur Hossain","email":"monsur@google.com"},{"name":"Linda Nichols","email":"lynnaloo@gmail.com"}],"main":"./lib/googleapis","repository":{"type":"git","url":"https://github.com/lynnaloo/google-api-nodejs-client.git"},"keywords":["google","api","google apis","client","client library"],"dependencies":{"request":"~2.34.0","async":"~0.2.10","gapitoken-generic":"~0.0.3"},"devDependencies":{"mocha":"1.8.1","url":"0.7.9"},"scripts":{"test":"mocha --reporter spec --timeout 4000"},"license":"Apache 2","gitHead":"d5937433819229f06fdc40983d40cd0990e7037f","bugs":{"url":"https://github.com/lynnaloo/google-api-nodejs-client/issues"},"homepage":"https://github.com/lynnaloo/google-api-nodejs-client","_id":"googleapis-plus@0.8.0","_shasum":"95b52452c87684c94a9ab4f1fe718d038e034985","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"lynnaloo","email":"lynnaloo@gmail.com"},"maintainers":[{"name":"lynnaloo","email":"lynnaloo@gmail.com"}],"dist":{"shasum":"95b52452c87684c94a9ab4f1fe718d038e034985","tarball":"http://registry.npmjs.org/googleapis-plus/-/googleapis-plus-0.8.0.tgz"}}
38 error new={"name":"googleapis-plus","version":"0.8.0","author":{"name":"Linda Nichols","email":"lynnaloo@gmail.com"},"description":"Google APIs Client Library for Node.js","contributors":[{"name":"Burcu Dogan","email":"jbd@google.com"},{"name":"Monsur Hossain","email":"monsur@google.com"},{"name":"Linda Nichols","email":"lynnaloo@gmail.com"}],"main":"./lib/googleapis","repository":{"type":"git","url":"https://github.com/lynnaloo/google-api-nodejs-client.git"},"keywords":["google","api","google apis","client","client library"],"dependencies":{"request":"~2.34.0","async":"~0.2.10","gapitoken-generic":"~0.0.3"},"devDependencies":{"mocha":"1.8.1","url":"0.7.9"},"scripts":{"test":"mocha --reporter spec --timeout 4000"},"license":"Apache 2","readme":"# google-api-nodejs-client [alpha]\u000a\u000a[![Build Status](https://travis-ci.org/google/google-api-nodejs-client.png)](https://travis-ci.org/google/google-api-nodejs-client)\u000a\u000a`google-api-nodejs-client` is Google's officially supported\u000a[node.js](http://nodejs.org/) client\u000alibrary for accessing Google APIs, it also supports authorization and\u000aauthentication with OAuth 2.0.\u000a\u000a### Questions/problems?\u000a\u000a* Ask your development related questions on [![Ask a question on Stackoverflow](https://googledrive.com/host/0ByfSjdPVs9MZbkhjeUhMYzRTeEE/stackoveflow-tag.png)](http://stackoverflow.com/questions/tagged/google-api-nodejs-client)\u000a* If you found a bug, please [file a bug](https://github.com/google/google-api-nodejs-client/issues).\u000a\u000a**Note**: This library is currently in *alpha* status, meaning that we can make\u000achanges in the future that *may not be compatible* with the previous versions.\u000a\u000a## Installation\u000a\u000aThe library is distributed on `npm`. In order to add it as a dependency,\u000arun the following command:\u000a\u000a~~~~ sh\u000a$ npm install googleapis\u000a~~~~\u000a\u000a## Guide\u000a\u000a### Discover APIs\u000a\u000aDynamically load Google APIs and start making requests:\u000a\u000a~~~~ js\u000avar googleapis = require('googleapis');\u000a\u000agoogleapis\u000a    .discover('urlshortener', 'v1')\u000a    .discover('plus', 'v1')\u000a    .execute(function(err, client) {\u000a  if (err) {\u000a    console.log('Problem during the client discovery.', err);\u000a    return;\u000a  }\u000a  var params = { shortUrl: 'http://goo.gl/DdUKX' };\u000a  var getUrlReq = client.urlshortener.url.get(params);\u000a\u000a  getUrlReq.execute(function (err, response) {\u000a    console.log('Long url is', response.longUrl);\u000a  });\u000a\u000a  var getUserReq = client.plus.people.get({ userId: '+burcudogan' });\u000a\u000a  getUserReq.execute(function(err, user) {\u000a    console.log('User id is: ' + user.id);\u000a  });\u000a});\u000a~~~~\u000a\u000aSupported APIs are listed on\u000a[Google APIs Explorer](https://developers.google.com/apis-explorer).\u000a\u000a#### Discovery Document Caching\u000a\u000aDiscovery documents are being cached for 5 minutes locally.\u000aYou can configure the directory used to store cached discovery\u000afiles by using the `cache.path` option.\u000a\u000a~~~~ js\u000agoogleapis\u000a    .discover('plus', 'v3')\u000a    .withOpts({ cache: { path: '<path>' }))\u000a    .execute();\u000a~~~~\u000a\u000a### Authorization and Authentication\u000a\u000aThis client comes with an OAuth2 client that allows you to retrieve an access token and\u000arefreshes the token and re-try the request seamlessly if token is expired. The\u000abasics of Google's OAuth 2.0 implementation is explained on\u000a[Google Authorization and Authentication\u000adocumentation](https://developers.google.com/accounts/docs/OAuth2Login).\u000a\u000aA complete sample application that authorizes and authenticates with OAuth2.0\u000aclient is available at `examples/oauth2.js`.\u000a\u000a#### Consent Page Url\u000a\u000aIn order to ask for permissions from a user to retrieve an access token, you\u000ashould redirect them to a consent page. In order to create a consent page\u000aURL:\u000a\u000a~~~~ js\u000avar googleapis = require('googleapis'),\u000a    OAuth2 = googleapis.auth.OAuth2;\u000a\u000avar oauth2Client =\u000a    new OAuth2(CLIENT_ID, CLIENT_SECRET, REDIRECT_URL);\u000a\u000a// generates a url that allows offline access and asks permissions\u000a// for Google+ scope.\u000avar scopes = [\u000a  'https://www.googleapis.com/auth/plus.me',\u000a  'https://www.googleapis.com/auth/calendar'\u000a];\u000a\u000avar url = oauth2Client.generateAuthUrl({\u000a  access_type: 'offline',\u000a  scope: scopes.join(\" \") // space delimited string of scopes\u000a});\u000a~~~~\u000a\u000a#### Retrieving Tokens\u000aOnce a user has given permissions on the consent page, Google will redirect\u000athe page to the redirect url you have provided with a code query parameter.\u000a\u000a    GET /oauthcallback?code={authorizationCode}\u000a\u000aWith the code returned, you can ask for an access token as shown below:\u000a\u000a~~~~ js\u000aoauth2Client.getToken(code, function(err, tokens) {\u000a  // contains an access_token and optionally a refresh_token.\u000a  // save them permanently.\u000a});\u000a~~~~\u000a\u000a### API Client\u000a\u000aClient libraries are generated during runtime by metadata provided by Google\u000aAPIs Discovery Service. Metadata provided by Discovery Service is cached,\u000aand won't be requested each time you load a client. Below, there is an\u000aexample of loading a client for\u000a[URL Shortener API](https://developers.google.com/url-shortener/).\u000a\u000a~~~~ js\u000agoogleapis\u000a    .discover('urlshortener', 'v1')\u000a    .execute(function(err, client) {\u000a  // handle discovery errors\u000a  // make requests\u000a});\u000a~~~~\u000a\u000a### Requests\u000a\u000aThe following sample loads a client for URL Shortener and retrieves the long url\u000aof the given short url:\u000a\u000a~~~~ js\u000agoogleapis\u000a    .discover('urlshortener', 'v1')\u000a    .execute(function(err, client) {\u000a  // handle discovery errors\u000a  client.urlshortener.url.get({ shortUrl: 'http://goo.gl/DdUKX' })\u000a      .execute(function(err, result) {\u000a    // result.longUrl contains the long url.\u000a  });\u000a});\u000a~~~~\u000a\u000aAlternatively, you may need to send an API key with the\u000arequest you are going to make. The following creates and executes a request from the Google+ API service to retrieve a person profile given a userId:\u000a\u000a~~~~ js\u000agoogleapis\u000a    .discover('plus', 'v1')\u000a    .execute(function(err, client) {\u000a  // handle discovery errors\u000a  var getUserAuthdReq = client.plus.people.get({ userId: '+burcudogan' })\u000a      .withApiKey(API_KEY);\u000a\u000a  getUserAuthdReq.execute(function(err, user) {\u000a    console.log(\"Result: \" + (err ? err.message : user.displayName));\u000a  });\u000a});\u000a~~~~\u000a\u000aTo learn more about API keys, please see the [documentation](https://developers.google.com/console/help/#UsingKeys).\u000a\u000a#### Making Authenticated Requests\u000a\u000aAnd you can start using oauth2Client to authorize and authenticate your\u000arequests to Google APIs with the retrieved tokens. If you provide a\u000arefresh_token, the access_token is automatically refreshed and the request is replayed in\u000acase the access_token has expired.\u000a\u000aFollowing sample retrieves Google+ profile of the authenticated user.\u000a\u000a~~~~ js\u000avar oauth2Client =\u000a    new OAuth2(CLIENT_ID, CLIENT_SECRET, REDIRECT_URL);\u000a\u000a// Retrieve tokens via token exchange explaind above.\u000a// Or you can set them.\u000aoauth2Client.credentials = {\u000a  access_token: 'ACCESS TOKEN HERE',\u000a  refresh_token: 'REFRESH TOKEN HERE'\u000a};\u000a\u000aclient\u000a    .plus.people.get({ userId: 'me' })\u000a    .withAuthClient(oauth2Client)\u000a    .execute(callback);\u000a~~~~\u000a\u000a### Batch requests (experimental)\u000a\u000aYou can combine multiple requests in a single one by using batch requests.\u000a\u000a~~~~ js\u000avar getUserReq =\u000a    client.plus.people.get({ userId: '+BurcuDogan' });\u000a\u000avar insertUrlReq =\u000a    client.urlshortener.url.insert({ longUrl: 'http://google.com' });\u000a\u000aclient\u000a    .newBatchRequest()\u000a    .add(getUserReq)\u000a    .add(insertUrlReq)\u000a    .execute(function(err, results) {\u000a  // handle results\u000a});\u000a~~~~\u000a\u000a### Media Uploads\u000a\u000aClient supports basic and multipart media uploads. For creation and modification requests\u000awith media attachments, take a look at the `examples/mediaupload.js` sample.\u000a\u000a~~~~ js\u000aclient\u000a    .drive.files.insert({ title: 'Test', mimeType: 'text/plain' })\u000a    .withMedia('text/plain', 'Hello World')\u000a    .execute();\u000a~~~~\u000a\u000a## License\u000a\u000a`google-api-nodejs-client` is licensed with Apache 2.0. Full license text is\u000aavailable on COPYING file.\u000a\u000a## Contributing\u000a\u000aSee [CONTRIBUTING](https://github.com/google/google-api-nodejs-client/tree/master/CONTRIBUTING.md).\u000a","readmeFilename":"README.md","gitHead":"d5937433819229f06fdc40983d40cd0990e7037f","bugs":{"url":"https://github.com/lynnaloo/google-api-nodejs-client/issues"},"homepage":"https://github.com/lynnaloo/google-api-nodejs-client","_id":"googleapis-plus@0.8.0","_shasum":"d29ec3015d605113492549c208835bfeb2274700","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"lynnaloo","email":"lynnaloo@gmail.com"},"maintainers":[{"name":"lynnaloo","email":"lynnaloo@gmail.com"}],"dist":{"shasum":"d29ec3015d605113492549c208835bfeb2274700","tarball":"http://registry.npmjs.org/googleapis-plus/-/googleapis-plus-0.8.0.tgz"}}: googleapis-plus
38 error     at RegClient.<anonymous> (/usr/local/nvm/v0.10.29/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:274:14)
38 error     at Request._callback (/usr/local/nvm/v0.10.29/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:212:65)
38 error     at Request.self.callback (/usr/local/nvm/v0.10.29/lib/node_modules/npm/node_modules/request/request.js:123:22)
38 error     at Request.emit (events.js:98:17)
38 error     at Request.<anonymous> (/usr/local/nvm/v0.10.29/lib/node_modules/npm/node_modules/request/request.js:893:14)
38 error     at Request.emit (events.js:117:20)
38 error     at IncomingMessage.<anonymous> (/usr/local/nvm/v0.10.29/lib/node_modules/npm/node_modules/request/request.js:844:12)
38 error     at IncomingMessage.emit (events.js:117:20)
38 error     at _stream_readable.js:929:16
38 error     at process._tickCallback (node.js:419:13)
39 error If you need help, you may report this *entire* log,
39 error including the npm and node versions, at:
39 error     <http://github.com/npm/npm/issues>
40 error System Linux 3.2.0-23-generic
41 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
42 error cwd /home/vagrant/dev/google-api-nodejs-client
43 error node -v v0.10.29
44 error npm -v 1.4.14
45 verbose exit [ 1, true ]
